syntax = "proto3";

option java_multiple_files = true;
option java_package = "net.honarnama";
option java_outer_classname = "HonarnamaProto";

package protobuf;

// import "google/api/annotations.proto";

message RequestProperties {
  uint64 ifNotMatchEtag = 1;
  string userAuthToken = 2;
  string clientId = 3;
  int32 clientVersion = 4;
  string userLanguage = 5;
  string userCountry = 6;
  int32 mcc = 7;
  int32 mnc = 8;
}

message ReplyProperties {
  enum StatusCode {
    OK = 0;
    NOT_MODIFIED = 1;
    CLIENT_ERROR = 2;
    SERVER_ERROR = 3;
  }
  StatusCode statusCode = 1;
  uint32 maxAgeMinutes = 2;
  uint64 etag = 3;
  string serverVersion = 4;
  string errorMessage = 5;
  string newUserAuthToken = 6;
}

service MetaService {
  rpc Meta(MetaRequest) returns (MetaReply) {
//    option (google.api.http) = {
//      get: "/v1/meta"
//    };
  }
}

message Location {
  uint32 id = 1;
  uint32 parentId = 2;
  string name = 3;
  uint32 order = 4;
  enum LocType {
    COUNTRY = 0;
    PROVINCE = 1;
    CITY = 2;
    NEIGHBORHOOD = 3;
  }
  LocType locType = 5;
}

message ArtCategory {
  uint32 id = 1;
  uint32 parentId = 2;
  string name = 3;
  uint32 order = 4;
  bool allSubCatFilterType = 5;
}

message EventCategory {
  uint32 id = 1;
  string name = 2;
  uint32 order = 3;
}

message MetaRequest {
  RequestProperties requestProperties = 1;
}

message MetaReply {
  ReplyProperties replyProperties = 1;
  repeated Location locations = 2;
  repeated int32 removedLocations = 3 [packed=true];
  repeated ArtCategory artCategories = 4;
  repeated int32 removedArtCategories = 5 [packed=true];
  repeated EventCategory eventCategories = 6;
  repeated int32 removedEventCategories = 7 [packed=true];
}

service AuthService {
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountReply) {
//    option (google.api.http) = {
//      post: "/v1/accounts"
//      body: "*"
//    };
  }
}

message CreateAccountRequest {
  RequestProperties requestProperties = 1;
  string name = 2;
  string email = 3;
  string mobileNumber = 4;
  enum Gender {
    FEMALE = 0;
    MALE = 1;
    UNSPECIFIED = 2;
  }
  Gender gender = 5;
  enum ActivationMethod {
    EMAIL = 0;
    TELEGRAM = 1;
  }
  ActivationMethod activationMethod = 6;
}

message CreateAccountReply {
  ReplyProperties replyProperties = 1;
  enum ErrorCode {
    NO_CLIENT_ERROR = 0;
    INVALID_EMAIL = 1;
    DUPLICATE_EMAIL = 2;
    INVALID_MOBILE_NUMBER = 3;
    DUPLICATE_MOBILE_NUMBER = 4;
  }
  ErrorCode errorCode = 2;
  string telegramActivationCode = 3;
}

service SellService {
  rpc CreateItem(CreateItemRequest) returns (CreateItemReply) {
  }
}

message CreateItemRequest {
  RequestProperties requestProperties = 1;
  string name = 2;
  uint64 price = 3;
  uint32 artCategoryId = 4;
  string description = 5;
  string image1 = 6;
  string image2 = 7;
  string image3 = 8;
  string image4 = 9;
  string ownerId = 10;
  string storeId = 11;
}

message CreateItemReply {
  ReplyProperties replyProperties = 1;
  enum ErrorCode {
    NO_CLIENT_ERROR = 0;
    NO_NAME_ERROR = 1;
    NO_PRICE_ERROR = 2;
    NO_CATEGORY_ERROR = 3;
    NO_DESC_ERROR = 4;
    NO_IMAGE_ERROR = 5;
    NO_OWNER_ERROR = 6;
  }
  ErrorCode errorCode = 2;
  string telegramActivationCode = 3;
}